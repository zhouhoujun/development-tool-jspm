{"version":3,"sources":["IndexBundle.js","IndexBundle.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","development_core_1","require","htmlreplace","IndexBundle","info","name","ctx","option","gulp","cfgopt","src","index","dist","pipes","mainfile","bust","concat","PipeTask","task","order","oper","Operation","release","deploy","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AACA,IAAIA,aAAc,aAAQ,UAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,QAAIC,IAAIC,UAAUC,MAAlB;AAAA,QAA0BC,IAAIH,IAAI,CAAJ,GAAQH,MAAR,GAAiBE,SAAS,IAAT,GAAgBA,OAAOK,OAAOC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,QAA2HO,CAA3H;AACA,QAAI,QAAOC,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,IAA+B,OAAOA,QAAQC,QAAf,KAA4B,UAA/D,EAA2EL,IAAII,QAAQC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,IAAIb,WAAWM,MAAX,GAAoB,CAAjC,EAAoCO,KAAK,CAAzC,EAA4CA,GAA5C;AAAiD,YAAIH,IAAIV,WAAWa,CAAX,CAAR,EAAuBN,IAAI,CAACH,IAAI,CAAJ,GAAQM,EAAEH,CAAF,CAAR,GAAeH,IAAI,CAAJ,GAAQM,EAAET,MAAF,EAAUC,GAAV,EAAeK,CAAf,CAAR,GAA4BG,EAAET,MAAF,EAAUC,GAAV,CAA5C,KAA+DK,CAAnE;AAAxE,KACL,OAAOH,IAAI,CAAJ,IAASG,CAAT,IAAcC,OAAOM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;AAMA,IAAIQ,aAAc,aAAQ,UAAKA,UAAd,IAA6B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC1D,QAAI,QAAON,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,IAA+B,OAAOA,QAAQO,QAAf,KAA4B,UAA/D,EAA2E,OAAOP,QAAQO,QAAR,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;AAC9E,CAFD;ACNA,IAAAE,qBAAAC,QAAuG,kBAAvG,CAAA;AAEA,IAAYC,cAAWD,QAAM,mBAAN,CAAvB;AAQA,IAAAE;AAAA;;AAEI,yBAAYC,IAAZ,EAA4B;AAAA;;AAAA,8HAClBA,IADkB;;AAExB,cAAKC,IAAL,GAAY,WAAZ;AAFwB;AAG3B;;AALL;AAAA;AAAA,+BAOWC,GAPX,EAO8BC,MAP9B,EAOmDC,IAPnD,EAO6D;AACrD,gBAAIC,SAAyBH,IAAIC,MAAjC;AACA,mBAAOC,KAAKE,GAAL,CAASD,OAAOE,KAAhB,CAAP;AACH;AAVL;AAAA;AAAA,8BAYUL,GAZV,EAY6BM,IAZ7B,EAYgDJ,IAZhD,EAY2D;AACnD,gBAAIK,QAAgB,CAChB,UAACP,GAAD,EAAkB;AACd,oBAAIC,SAAyBD,IAAIC,MAAjC;AACA,uBAAOL,YAAY,EAAE,MAAMK,OAAOO,QAAP,GAAkB,QAAlB,GAA6BP,OAAOQ,IAA5C,EAAZ,CAAP;AACH,aAJe,CAApB;AAOA,mBAAOF,MAAMG,MAAN,iHAAyBV,GAAzB,EAA8BM,IAA9B,EAAoCJ,IAApC,EAAP;AACH;AArBL;;AAAA;AAAA,EAAiCR,mBAAAiB,QAAjC,CAAA;AAJAd,cAAAvB,WAAA,CAACoB,mBAAAkB,IAAA,CAAK;AACFC,WAAO,CADL;AAEFC,UAAMpB,mBAAAqB,SAAA,CAAUC,OAAV,GAAoBtB,mBAAAqB,SAAA,CAAUE;AAFlC,CAAL,CAAD,ED6BI3B,WAAW,mBAAX,EAAgC,CAACP,MAAD,CAAhC,CC7BJ,CAAA,ED8BGc,WC9BH,CAAA;AAIaqB,QAAArB,WAAA,GAAWA,WAAX","file":"../IndexBundle.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nconst development_core_1 = require('development-core');\nconst htmlreplace = require('gulp-html-replace');\nlet IndexBundle = class IndexBundle extends development_core_1.PipeTask {\n    constructor(info) {\n        super(info);\n        this.name = 'mainindex';\n    }\n    source(ctx, option, gulp) {\n        let cfgopt = ctx.option;\n        return gulp.src(cfgopt.index);\n    }\n    pipes(ctx, dist, gulp) {\n        let pipes = [\n                (ctx) => {\n                let option = ctx.option;\n                return htmlreplace({ 'js': option.mainfile + '?bust=' + option.bust });\n            }\n        ];\n        return pipes.concat(super.pipes(ctx, dist, gulp));\n    }\n};\nIndexBundle = __decorate([\n    development_core_1.task({\n        order: 1,\n        oper: development_core_1.Operation.release | development_core_1.Operation.deploy\n    }), \n    __metadata('design:paramtypes', [Object])\n], IndexBundle);\nexports.IndexBundle = IndexBundle;\n","import * as _ from 'lodash';\r\nimport { task, ITaskContext, IAssertDist, Pipe, ITaskInfo, TransformSource, Operation, PipeTask } from 'development-core';\r\nimport { Gulp } from 'gulp';\r\nimport * as htmlreplace from 'gulp-html-replace';\r\n\r\nimport { IBundlesConfig } from './config';\r\n\r\n@task({\r\n    order: 1,\r\n    oper: Operation.release | Operation.deploy\r\n})\r\nexport class IndexBundle extends PipeTask {\r\n\r\n    constructor(info?: ITaskInfo) {\r\n        super(info);\r\n        this.name = 'mainindex';\r\n    }\r\n\r\n    source(ctx: ITaskContext, option: IAssertDist, gulp: Gulp): TransformSource | Promise<TransformSource> {\r\n        let cfgopt = <IBundlesConfig>ctx.option;\r\n        return gulp.src(cfgopt.index)\r\n    }\r\n\r\n    pipes(ctx: ITaskContext, dist: IAssertDist, gulp?: Gulp): Pipe[] {\r\n        let pipes = <Pipe[]>[\r\n            (ctx: ITaskContext) => {\r\n                let option = <IBundlesConfig>ctx.option;\r\n                return htmlreplace({ 'js': option.mainfile + '?bust=' + option.bust });\r\n            }\r\n        ];\r\n\r\n        return pipes.concat(super.pipes(ctx, dist, gulp));\r\n    }\r\n}\r\n"]}